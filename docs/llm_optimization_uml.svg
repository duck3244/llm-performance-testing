<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="900" xmlns="http://www.w3.org/2000/svg">
  <!-- 배경 -->
  <rect width="1200" height="900" fill="#f8f9fa"/>
  
  <!-- 제목 -->
  <text x="600" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#2c3e50">
    LLM 추론 성능 최적화 시스템 v2.0 - 아키텍처 다이어그램
  </text>
  
  <!-- CLI Layer -->
  <rect x="50" y="60" width="1100" height="80" fill="#3498db" rx="10" opacity="0.1"/>
  <text x="70" y="85" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
    CLI Layer
  </text>
  
  <!-- Main CLI -->
  <rect x="480" y="90" width="240" height="40" fill="#3498db" rx="5"/>
  <text x="600" y="115" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white" font-weight="bold">
    ImprovedCLI (main.py)
  </text>
  
  <!-- Config Layer -->
  <rect x="50" y="160" width="540" height="180" fill="#9b59b6" rx="10" opacity="0.1"/>
  <text x="70" y="185" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
    Configuration Layer
  </text>
  
  <!-- Config Classes -->
  <rect x="80" y="200" width="200" height="120" fill="#9b59b6" rx="5"/>
  <text x="180" y="220" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    BaseConfig
  </text>
  <line x1="80" y1="225" x2="280" y2="225" stroke="white" stroke-width="1"/>
  <text x="90" y="240" font-family="Arial, sans-serif" font-size="9" fill="white">
    ValidationResult
  </text>
  <text x="90" y="255" font-family="Arial, sans-serif" font-size="9" fill="white">
    ConfigValidator
  </text>
  <text x="90" y="270" font-family="Arial, sans-serif" font-size="9" fill="white">
    EnvironmentManager
  </text>
  <text x="90" y="285" font-family="Arial, sans-serif" font-size="9" fill="white">
    PathManager
  </text>
  <text x="90" y="300" font-family="Arial, sans-serif" font-size="9" fill="white">
    LoggingConfig
  </text>
  
  <rect x="320" y="200" width="200" height="120" fill="#8e44ad" rx="5"/>
  <text x="420" y="220" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    ModelConfig
  </text>
  <line x1="320" y1="225" x2="520" y2="225" stroke="white" stroke-width="1"/>
  <text x="330" y="240" font-family="Arial, sans-serif" font-size="9" fill="white">
    ModelType (Enum)
  </text>
  <text x="330" y="255" font-family="Arial, sans-serif" font-size="9" fill="white">
    DataType (Enum)
  </text>
  <text x="330" y="270" font-family="Arial, sans-serif" font-size="9" fill="white">
    QuantizationConfig
  </text>
  <text x="330" y="285" font-family="Arial, sans-serif" font-size="9" fill="white">
    VLLMConfig
  </text>
  <text x="330" y="300" font-family="Arial, sans-serif" font-size="9" fill="white">
    ModelConfigManager
  </text>
  
  <!-- Core Layer -->
  <rect x="610" y="160" width="540" height="600" fill="#e74c3c" rx="10" opacity="0.1"/>
  <text x="630" y="185" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
    Core System Layer
  </text>
  
  <!-- Memory Manager -->
  <rect x="640" y="200" width="220" height="140" fill="#e74c3c" rx="5"/>
  <text x="750" y="220" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    ImprovedResourceManager
  </text>
  <line x1="640" y1="225" x2="860" y2="225" stroke="white" stroke-width="1"/>
  <text x="650" y="240" font-family="Arial, sans-serif" font-size="9" fill="white">
    ThreadSafeModelRegistry
  </text>
  <text x="650" y="255" font-family="Arial, sans-serif" font-size="9" fill="white">
    MemoryCleanupManager
  </text>
  <text x="650" y="270" font-family="Arial, sans-serif" font-size="9" fill="white">
    memory_guard()
  </text>
  <text x="650" y="285" font-family="Arial, sans-serif" font-size="9" fill="white">
    cleanup_all_devices()
  </text>
  <text x="650" y="300" font-family="Arial, sans-serif" font-size="9" fill="white">
    get_memory_stats()
  </text>
  <text x="650" y="315" font-family="Arial, sans-serif" font-size="9" fill="white">
    emergency_cleanup()
  </text>
  <text x="650" y="330" font-family="Arial, sans-serif" font-size="9" fill="white">
    start_monitoring()
  </text>
  
  <!-- Async Manager -->
  <rect x="900" y="200" width="220" height="140" fill="#c0392b" rx="5"/>
  <text x="1010" y="220" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    SafeAsyncManager
  </text>
  <line x1="900" y1="225" x2="1120" y2="225" stroke="white" stroke-width="1"/>
  <text x="910" y="240" font-family="Arial, sans-serif" font-size="9" fill="white">
    SafeEventLoopManager
  </text>
  <text x="910" y="255" font-family="Arial, sans-serif" font-size="9" fill="white">
    ThreadSafeTaskRegistry
  </text>
  <text x="910" y="270" font-family="Arial, sans-serif" font-size="9" fill="white">
    run_async()
  </text>
  <text x="910" y="285" font-family="Arial, sans-serif" font-size="9" fill="white">
    submit_coro()
  </text>
  <text x="910" y="300" font-family="Arial, sans-serif" font-size="9" fill="white">
    run_parallel()
  </text>
  <text x="910" y="315" font-family="Arial, sans-serif" font-size="9" fill="white">
    managed_task()
  </text>
  <text x="910" y="330" font-family="Arial, sans-serif" font-size="9" fill="white">
    get_task_result()
  </text>
  
  <!-- Error Handler -->
  <rect x="640" y="360" width="220" height="140" fill="#d35400" rx="5"/>
  <text x="750" y="380" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    ErrorHandler
  </text>
  <line x1="640" y1="385" x2="860" y2="385" stroke="white" stroke-width="1"/>
  <text x="650" y="400" font-family="Arial, sans-serif" font-size="9" fill="white">
    ErrorPatternRegistry
  </text>
  <text x="650" y="415" font-family="Arial, sans-serif" font-size="9" fill="white">
    handle_exception()
  </text>
  <text x="650" y="430" font-family="Arial, sans-serif" font-size="9" fill="white">
    attempt_auto_recovery()
  </text>
  <text x="650" y="445" font-family="Arial, sans-serif" font-size="9" fill="white">
    get_error_history()
  </text>
  <text x="650" y="460" font-family="Arial, sans-serif" font-size="9" fill="white">
    safe_execute() decorator
  </text>
  <text x="650" y="475" font-family="Arial, sans-serif" font-size="9" fill="white">
    error_context() manager
  </text>
  <text x="650" y="490" font-family="Arial, sans-serif" font-size="9" fill="white">
    300 error patterns
  </text>
  
  <!-- Optimizer -->
  <rect x="900" y="360" width="220" height="140" fill="#e67e22" rx="5"/>
  <text x="1010" y="380" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    SafeOptimizer
  </text>
  <line x1="900" y1="385" x2="1120" y2="385" stroke="white" stroke-width="1"/>
  <text x="910" y="400" font-family="Arial, sans-serif" font-size="9" fill="white">
    Optuna Integration
  </text>
  <text x="910" y="415" font-family="Arial, sans-serif" font-size="9" fill="white">
    optimize_parameters()
  </text>
  <text x="910" y="430" font-family="Arial, sans-serif" font-size="9" fill="white">
    grid_search_optimization()
  </text>
  <text x="910" y="445" font-family="Arial, sans-serif" font-size="9" fill="white">
    InferenceParams
  </text>
  <text x="910" y="460" font-family="Arial, sans-serif" font-size="9" fill="white">
    OptimizationResult
  </text>
  <text x="910" y="475" font-family="Arial, sans-serif" font-size="9" fill="white">
    generate_recommendations()
  </text>
  <text x="910" y="490" font-family="Arial, sans-serif" font-size="9" fill="white">
    Bayesian Optimization
  </text>
  
  <!-- Data Classes -->
  <rect x="640" y="520" width="220" height="100" fill="#16a085" rx="5"/>
  <text x="750" y="540" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    Data Classes
  </text>
  <line x1="640" y1="545" x2="860" y2="545" stroke="white" stroke-width="1"/>
  <text x="650" y="560" font-family="Arial, sans-serif" font-size="9" fill="white">
    MemoryStats
  </text>
  <text x="650" y="575" font-family="Arial, sans-serif" font-size="9" fill="white">
    TaskInfo
  </text>
  <text x="650" y="590" font-family="Arial, sans-serif" font-size="9" fill="white">
    ErrorInfo
  </text>
  <text x="650" y="605" font-family="Arial, sans-serif" font-size="9" fill="white">
    ValidationResult
  </text>
  
  <!-- Enums -->
  <rect x="900" y="520" width="220" height="100" fill="#27ae60" rx="5"/>
  <text x="1010" y="540" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    Enums
  </text>
  <line x1="900" y1="545" x2="1120" y2="545" stroke="white" stroke-width="1"/>
  <text x="910" y="560" font-family="Arial, sans-serif" font-size="9" fill="white">
    MemoryLevel
  </text>
  <text x="910" y="575" font-family="Arial, sans-serif" font-size="9" fill="white">
    ErrorSeverity
  </text>
  <text x="910" y="590" font-family="Arial, sans-serif" font-size="9" fill="white">
    TaskState
  </text>
  <text x="910" y="605" font-family="Arial, sans-serif" font-size="9" fill="white">
    ExecutorType
  </text>
  
  <!-- Global Managers -->
  <rect x="640" y="640" width="480" height="100" fill="#2c3e50" rx="5"/>
  <text x="880" y="660" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">
    Global Singleton Managers (Thread-Safe)
  </text>
  <line x1="640" y1="665" x2="1120" y2="665" stroke="white" stroke-width="1"/>
  <text x="650" y="680" font-family="Arial, sans-serif" font-size="9" fill="white">
    get_resource_manager() - ImprovedResourceManager instance
  </text>
  <text x="650" y="695" font-family="Arial, sans-serif" font-size="9" fill="white">
    get_async_manager() - SafeAsyncManager instance
  </text>
  <text x="650" y="710" font-family="Arial, sans-serif" font-size="9" fill="white">
    get_global_error_handler() - ErrorHandler instance
  </text>
  <text x="650" y="725" font-family="Arial, sans-serif" font-size="9" fill="white">
    Thread-safe initialization with RLock protection
  </text>
  
  <!-- 데이터 흐름 -->
  <rect x="50" y="360" width="540" height="380" fill="#95a5a6" rx="10" opacity="0.1"/>
  <text x="70" y="385" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2c3e50">
    Data Flow and Workflow
  </text>
  
  <!-- Workflow Steps -->
  <rect x="80" y="400" width="120" height="60" fill="#34495e" rx="5"/>
  <text x="140" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white" font-weight="bold">
    1. System Init
  </text>
  <text x="140" y="435" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">
    Environment Setup
  </text>
  <text x="140" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">
    Hardware Detection
  </text>
  
  <rect x="220" y="400" width="120" height="60" fill="#7f8c8d" rx="5"/>
  <text x="280" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white" font-weight="bold">
    2. Model Config
  </text>
  <text x="280" y="435" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">
    Validation
  </text>
  <text x="280" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">
    Hardware Optimization
  </text>
  
  <rect x="360" y="400" width="120" height="60" fill="#95a5a6" rx="5"/>
  <text x="420" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white" font-weight="bold">
    3. Memory Guard
  </text>
  <text x="420" y="435" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">
    Safety Check
  </text>
  <text x="420" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">
    Auto Cleanup
  </text>
  
  <rect x="500" y="400" width="120" height="60" fill="#bdc3c7" rx="5"/>
  <text x="560" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white" font-weight="bold">
    4. Optimization
  </text>
  <text x="560" y="435" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">
    Optuna/Grid Search
  </text>
  <text x="560" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="white">
    Error Recovery
  </text>
  
  <!-- Critical Features -->
  <rect x="80" y="480" width="480" height="120" fill="#f39c12" rx="5"/>
  <text x="320" y="500" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white" font-weight="bold">
    Critical Problems Solved
  </text>
  <line x1="80" y1="505" x2="560" y2="505" stroke="white" stroke-width="1"/>
  <text x="90" y="520" font-family="Arial, sans-serif" font-size="10" fill="white">
    Complete Memory Deallocation: Weak references, automatic cleanup, monitoring
  </text>
  <text x="90" y="535" font-family="Arial, sans-serif" font-size="10" fill="white">
    Dependency Conflicts Resolved: scikit-optimize removed, Optuna unified
  </text>
  <text x="90" y="550" font-family="Arial, sans-serif" font-size="10" fill="white">
    Thread-Safe Async: Dedicated event loop, thread isolation, deadlock prevention
  </text>
  <text x="90" y="565" font-family="Arial, sans-serif" font-size="10" fill="white">
    Modular Configuration: 4600-line file split into functional modules
  </text>
  <text x="90" y="580" font-family="Arial, sans-serif" font-size="10" fill="white">
    Enhanced Error Handling: 300 error patterns, auto-recovery, specific solutions
  </text>
  
  <!-- Important Features -->
  <rect x="80" y="620" width="480" height="100" fill="#27ae60" rx="5"/>
  <text x="320" y="640" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white" font-weight="bold">
    Important Improvements
  </text>
  <line x1="80" y1="645" x2="560" y2="645" stroke="white" stroke-width="1"/>
  <text x="90" y="660" font-family="Arial, sans-serif" font-size="10" fill="white">
    Type Safety: Enum-based configurations, validation system, hardware optimization
  </text>
  <text x="90" y="675" font-family="Arial, sans-serif" font-size="10" fill="white">
    Performance Monitoring: Real-time stats, resource tracking, automatic alerts
  </text>
  <text x="90" y="690" font-family="Arial, sans-serif" font-size="10" fill="white">
    Graceful Degradation: Fallback options, retry mechanisms, safe mode operation
  </text>
  <text x="90" y="705" font-family="Arial, sans-serif" font-size="10" fill="white">
    Intelligent Recommendations: Context-aware suggestions, hardware-specific optimization
  </text>
  
  <!-- 연결선들 -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e"/>
    </marker>
  </defs>
  
  <!-- CLI to Config -->
  <line x1="550" y1="130" x2="420" y2="160" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- CLI to Core -->
  <line x1="650" y1="130" x2="750" y2="160" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Core interconnections -->
  <line x1="750" y1="340" x2="750" y2="360" stroke="#2c3e50" stroke-width="2"/>
  <line x1="860" y1="270" x2="900" y2="270" stroke="#2c3e50" stroke-width="2"/>
  <line x1="1010" y1="340" x2="1010" y2="360" stroke="#2c3e50" stroke-width="2"/>
  
  <!-- Core to Global -->
  <line x1="880" y1="620" x2="880" y2="640" stroke="#2c3e50" stroke-width="2"/>
  
  <!-- 범례 -->
  <rect x="50" y="780" width="540" height="100" fill="#ecf0f1" rx="5" opacity="0.9"/>
  <text x="320" y="800" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#2c3e50">
    Legend
  </text>
  <rect x="70" y="810" width="15" height="15" fill="#3498db"/>
  <text x="95" y="822" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">CLI Layer</text>
  <rect x="170" y="810" width="15" height="15" fill="#9b59b6"/>
  <text x="195" y="822" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">Config Layer</text>
  <rect x="280" y="810" width="15" height="15" fill="#e74c3c"/>
  <text x="305" y="822" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">Core System</text>
  <rect x="380" y="810" width="15" height="15" fill="#f39c12"/>
  <text x="405" y="822" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">Critical Features</text>
  <rect x="70" y="830" width="15" height="15" fill="#27ae60"/>
  <text x="95" y="842" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">Important Features</text>
  <rect x="200" y="830" width="15" height="15" fill="#2c3e50"/>
  <text x="225" y="842" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">Global Managers</text>
  <rect x="330" y="830" width="15" height="15" fill="#16a085"/>
  <text x="355" y="842" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">Data Classes</text>
  <rect x="430" y="830" width="15" height="15" fill="#95a5a6"/>
  <text x="455" y="842" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">Workflow</text>
  
  <text x="70" y="865" font-family="Arial, sans-serif" font-size="9" fill="#7f8c8d">
    Architecture: Layered with Singleton Managers, Thread-Safe Components, Memory-Safe Operations
  </text>
</svg>